services:
  # название сервиса должно быть одинаковым с prod, чтобы не заводить отдельную переменную окружения
  jaeger_agent:
    image: jaegertracing/all-in-one:1.41
    container_name: jaeger
    ports:
      - "${JAEGER_PORT}:6831/udp"
      - "${JAEGER_UI_PORT}:16686"

  auth:
    restart: "always"
    build:
      context: service_auth
      dockerfile: ./docker/Dockerfile
      target: development
      tags:
        - "auth"
    container_name: auth
    volumes:
      - ./service_auth/src/:/opt/app/
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      - postgres_auth
      - redis_auth

  redis_auth:
    image: redis:7.0.5-alpine
    container_name: redis_auth
    command: redis-server --requirepass ${REDIS_AUTH_PASSWORD} --save 20 1
    volumes:
      - redis_auth_data:/data
    ports:
      - "${REDIS_AUTH_PORT}:6379"

  postgres_auth:
    image: postgres:15.1-alpine
    container_name: postgres_auth
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data/
    ports:
      - "${PG_AUTH_PORT}:5432"
    environment:
      - POSTGRES_USER=${PG_AUTH_USER}
      - POSTGRES_PASSWORD=${PG_AUTH_PASSWORD}
      - POSTGRES_DB=${PG_AUTH_DB_NAME}

  rabbitmq_notice:
    image: rabbitmq:3.11.9-management
    container_name: rabbitmq_notice
    hostname: rabbitmq
    restart: always
    environment:
      # set from env!
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=123qwe
      # disk free limit - when rabbit stop write to disk
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - rabbitmq_notice_data:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672

  redis_notice:
    image: redis:7.0.5-alpine
    container_name: redis_notice
    command: redis-server --requirepass ${REDIS_NOTICE_PASSWORD} --save 20 1
    volumes:
      - redis_notice_data:/data
    ports:
      - "${REDIS_NOTICE_PORT}:6379"

  postgres_notice:
    image: postgres:15.1-alpine
    container_name: postgres_notice
    volumes:
      - postgres_notice_data:/var/lib/postgresql/data/
    ports:
      - "${PG_NOTICE_PORT}:5432"
    environment:
      - POSTGRES_USER=${PG_NOTICE_USER}
      - POSTGRES_PASSWORD=${PG_NOTICE_PASSWORD}
      - POSTGRES_DB=${PG_NOTICE_DB_NAME}

volumes:
  postgres_auth_data:
  redis_auth_data:
  rabbitmq_notice_data:
  redis_notice_data:
  postgres_notice_data:
